{"code":"// Partition default templates\r\nconst AWS_TEMPLATE = \"s3.{region}.amazonaws.com\";\r\nconst AWS_CN_TEMPLATE = \"s3.{region}.amazonaws.com.cn\";\r\nconst AWS_ISO_TEMPLATE = \"s3.{region}.c2s.ic.gov\";\r\nconst AWS_ISO_B_TEMPLATE = \"s3.{region}.sc2s.sgov.gov\";\r\nconst AWS_US_GOV_TEMPLATE = \"s3.{region}.amazonaws.com\";\r\n// Partition regions\r\nconst AWS_REGIONS = new Set([\r\n    \"ap-east-1\",\r\n    \"ap-northeast-1\",\r\n    \"ap-northeast-2\",\r\n    \"ap-south-1\",\r\n    \"ap-southeast-1\",\r\n    \"ap-southeast-2\",\r\n    \"ca-central-1\",\r\n    \"eu-central-1\",\r\n    \"eu-north-1\",\r\n    \"eu-west-1\",\r\n    \"eu-west-2\",\r\n    \"eu-west-3\",\r\n    \"me-south-1\",\r\n    \"sa-east-1\",\r\n    \"us-east-1\",\r\n    \"us-east-2\",\r\n    \"us-west-1\",\r\n    \"us-west-2\",\r\n]);\r\nconst AWS_CN_REGIONS = new Set([\"cn-north-1\", \"cn-northwest-1\"]);\r\nconst AWS_ISO_REGIONS = new Set([\"us-iso-east-1\"]);\r\nconst AWS_ISO_B_REGIONS = new Set([\"us-isob-east-1\"]);\r\nconst AWS_US_GOV_REGIONS = new Set([\"us-gov-east-1\", \"us-gov-west-1\"]);\r\nexport const defaultRegionInfoProvider = (region, options) => {\r\n    let regionInfo = undefined;\r\n    switch (region) {\r\n        // First, try to match exact region names.\r\n        case \"ap-east-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.ap-east-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"ap-northeast-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.ap-northeast-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"ap-northeast-2\":\r\n            regionInfo = {\r\n                hostname: \"s3.ap-northeast-2.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"ap-south-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.ap-south-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"ap-southeast-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.ap-southeast-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"ap-southeast-2\":\r\n            regionInfo = {\r\n                hostname: \"s3.ap-southeast-2.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"ca-central-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.ca-central-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"cn-north-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.cn-north-1.amazonaws.com.cn\",\r\n                partition: \"aws-cn\",\r\n            };\r\n            break;\r\n        case \"cn-northwest-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.cn-northwest-1.amazonaws.com.cn\",\r\n                partition: \"aws-cn\",\r\n            };\r\n            break;\r\n        case \"eu-central-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.eu-central-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"eu-north-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.eu-north-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"eu-west-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.eu-west-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"eu-west-2\":\r\n            regionInfo = {\r\n                hostname: \"s3.eu-west-2.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"eu-west-3\":\r\n            regionInfo = {\r\n                hostname: \"s3.eu-west-3.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"fips-us-gov-west-1\":\r\n            regionInfo = {\r\n                hostname: \"s3-fips-us-gov-west-1.amazonaws.com\",\r\n                partition: \"aws-us-gov\",\r\n                signingRegion: \"us-gov-west-1\",\r\n            };\r\n            break;\r\n        case \"me-south-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.me-south-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"s3-external-1\":\r\n            regionInfo = {\r\n                hostname: \"s3-external-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n                signingRegion: \"us-east-1\",\r\n            };\r\n            break;\r\n        case \"sa-east-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.sa-east-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"us-east-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"us-east-2\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-east-2.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"us-gov-east-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-gov-east-1.amazonaws.com\",\r\n                partition: \"aws-us-gov\",\r\n            };\r\n            break;\r\n        case \"us-gov-west-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-gov-west-1.amazonaws.com\",\r\n                partition: \"aws-us-gov\",\r\n            };\r\n            break;\r\n        case \"us-iso-east-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-iso-east-1.c2s.ic.gov\",\r\n                partition: \"aws-iso\",\r\n            };\r\n            break;\r\n        case \"us-isob-east-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-isob-east-1.sc2s.sgov.gov\",\r\n                partition: \"aws-iso-b\",\r\n            };\r\n            break;\r\n        case \"us-west-1\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-west-1.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        case \"us-west-2\":\r\n            regionInfo = {\r\n                hostname: \"s3.us-west-2.amazonaws.com\",\r\n                partition: \"aws\",\r\n            };\r\n            break;\r\n        // Next, try to match partition endpoints.\r\n        default:\r\n            if (AWS_REGIONS.has(region)) {\r\n                regionInfo = {\r\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\r\n                    partition: \"aws\",\r\n                };\r\n            }\r\n            if (AWS_CN_REGIONS.has(region)) {\r\n                regionInfo = {\r\n                    hostname: AWS_CN_TEMPLATE.replace(\"{region}\", region),\r\n                    partition: \"aws-cn\",\r\n                };\r\n            }\r\n            if (AWS_ISO_REGIONS.has(region)) {\r\n                regionInfo = {\r\n                    hostname: AWS_ISO_TEMPLATE.replace(\"{region}\", region),\r\n                    partition: \"aws-iso\",\r\n                };\r\n            }\r\n            if (AWS_ISO_B_REGIONS.has(region)) {\r\n                regionInfo = {\r\n                    hostname: AWS_ISO_B_TEMPLATE.replace(\"{region}\", region),\r\n                    partition: \"aws-iso-b\",\r\n                };\r\n            }\r\n            if (AWS_US_GOV_REGIONS.has(region)) {\r\n                regionInfo = {\r\n                    hostname: AWS_US_GOV_TEMPLATE.replace(\"{region}\", region),\r\n                    partition: \"aws-us-gov\",\r\n                };\r\n            }\r\n            // Finally, assume it's an AWS partition endpoint.\r\n            if (regionInfo === undefined) {\r\n                regionInfo = {\r\n                    hostname: AWS_TEMPLATE.replace(\"{region}\", region),\r\n                    partition: \"aws\",\r\n                };\r\n            }\r\n    }\r\n    return Promise.resolve(regionInfo);\r\n};\r\n","references":["/Users/tim/code/lambda-at-edge/node_modules/@aws-sdk/types/dist/cjs/index.d.ts"]}
