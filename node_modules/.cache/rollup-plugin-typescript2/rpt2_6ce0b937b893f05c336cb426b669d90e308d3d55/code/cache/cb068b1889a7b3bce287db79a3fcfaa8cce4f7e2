{"code":"// @ts-ignore\r\nimport manifest from \"./manifest.json\";\r\n// @ts-ignore\r\nimport { basePath } from \"./routes-manifest.json\";\r\nimport cloudFrontCompat from \"@sls-next/next-aws-cloudfront\";\r\nconst normaliseUri = (uri) => (uri === \"/\" ? \"/index\" : uri);\r\nconst router = (manifest) => {\r\n    const { apis: { dynamic, nonDynamic } } = manifest;\r\n    return (path) => {\r\n        if (basePath && path.startsWith(basePath))\r\n            path = path.slice(basePath.length);\r\n        if (nonDynamic[path]) {\r\n            return nonDynamic[path];\r\n        }\r\n        for (const route in dynamic) {\r\n            const { file, regex } = dynamic[route];\r\n            const re = new RegExp(regex, \"i\");\r\n            const pathMatchesRoute = re.test(path);\r\n            if (pathMatchesRoute) {\r\n                return file;\r\n            }\r\n        }\r\n        return null;\r\n    };\r\n};\r\nexport const handler = async (event) => {\r\n    const request = event.Records[0].cf.request;\r\n    const uri = normaliseUri(request.uri);\r\n    const pagePath = router(manifest)(uri);\r\n    if (!pagePath) {\r\n        return {\r\n            status: \"404\"\r\n        };\r\n    }\r\n    // eslint-disable-next-line\r\n    const page = require(`./${pagePath}`);\r\n    const { req, res, responsePromise } = cloudFrontCompat(event.Records[0].cf);\r\n    page.default(req, res);\r\n    return responsePromise;\r\n};\r\n","references":["/Users/tim/code/lambda-at-edge/node_modules/@sls-next/next-aws-cloudfront/next-aws-cloudfront.d.ts","/Users/tim/code/lambda-at-edge/types.d.ts","/Users/tim/code/lambda-at-edge/node_modules/@types/aws-lambda/index.d.ts"]}
